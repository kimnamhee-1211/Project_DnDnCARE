<?xml version="1.0" encoding="UTF-8"?>

<configuration>
	<!-- property : 설정파일에서 사용할 상수 변수 선언 -->
    <property name="LOG_PATH" value="C:\logs"/>
    <property name="LOG_PATH_MATCHING" value="C:\logs\matching"/>
    <property name="LOG_PATH_MATCHING_CREATE" value="C:\logs\matchingCreate"/>
	
	<!-- log 파일경로 설정 -->
   <!-- 
   <property name="LOG_PATH" value="\\192.168.40.37\sharedFolder\dndnCare\logs"/>
   <property name="LOG_PATH_MATCHING" value="\\192.168.40.37\sharedFolder\dndnCare\logs\matching"/>
   -->
	
	
	<!-- 색상코드 등록 -->
	<conversionRule conversionWord="color" converterClass="org.springframework.boot.logging.logback.ColorConverter"></conversionRule>
	
	<!-- Appender : 로그의 출력 위치를 지정 -->
	<appender name="myConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %color(%-5level) %color(${PID:-}){magenta} --- [%15.15thread] %color(%-40.40logger{36}){cyan} : %msg%n</Pattern>
		</layout>
	</appender>
	
	
	<appender name="careInformationFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/careInformation/careInformation.log</file> <!-- 기록할 파일의 경로를 지정 -->
		
		<!-- 출력 서식 지정 : 24-07-03 12:10:50 [INFO] LoginLogInterceptor.afterCompletion{25} - user02 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{yy-MM-dd HH:mm:SS} [%p] %C{1}.%M{%L} - %m%n</pattern>
		</encoder>
		
		<!-- RollingFile의 정책 기준을 지정 : TimeBased는 매 정시를 기준으로 파일을 나누어준다. -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/careInformation/careInformation.log.%d{yyyyMMdd}</fileNamePattern>
		</rollingPolicy>
	</appender>

	<appender name="careInformationAiFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/careInformationAi/careInformationAi.log</file> <!-- 기록할 파일의 경로를 지정 -->
		
		<!-- 출력 서식 지정 : 24-07-03 12:10:50 [INFO] LoginLogInterceptor.afterCompletion{25} - user02 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{yy-MM-dd HH:mm:SS} [%p] %C{1}.%M{%L} - %m%n</pattern>
		</encoder>
		
		<!-- RollingFile의 정책 기준을 지정 : TimeBased는 매 정시를 기준으로 파일을 나누어준다. -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/careInformationAi/careInformationAi.log.%d{yyyyMMdd}</fileNamePattern>
		</rollingPolicy>
	</appender>
	
	<appender name="careInformationUsageFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/careInformationUsage/careInformationAi.log</file> <!-- 기록할 파일의 경로를 지정 -->
		
		<!-- 출력 서식 지정 : 24-07-03 12:10:50 [INFO] LoginLogInterceptor.afterCompletion{25} - user02 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{yy-MM-dd HH:mm:SS} [%p] %C{1}.%M{%L} - %m%n</pattern>
		</encoder>
		
		<!-- RollingFile의 정책 기준을 지정 : TimeBased는 매 정시를 기준으로 파일을 나누어준다. -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/careInformationUsage/careInformationAi.log.%d{yyyyMMdd}</fileNamePattern>
		</rollingPolicy>
	</appender>
	
	<appender name="loginUserFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/loginUser/loginUser.log</file> <!-- 기록할 파일의 경로를 지정 -->
		
		<!-- 출력 서식 지정 : 24-07-03 12:10:50 [INFO] LoginLogInterceptor.afterCompletion{25} - user02 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{yy-MM-dd HH:mm:SS} [%p] %C{1}.%M{%L} - %m%n</pattern>
		</encoder>
		
		<!-- RollingFile의 정책 기준을 지정 : TimeBased는 매 정시를 기준으로 파일을 나누어준다. -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/loginUser/loginUser.log.%d{yyyyMMdd}</fileNamePattern>
		</rollingPolicy>
	</appender>
	
	
	<!-- 매칭쪽 -->
	<appender name="myFileAppenderMatching" class="ch.qos.logback.core.FileAppender">
   		<file>${LOG_PATH_MATCHING}/matchingDisease.log</file>
      	<!--property에서 변수화 시킨 경로를 사용 -->
   		<append>true</append> <!-- 기존 파일을 덮어씀 -->
      	<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
         	<pattern>%d{yy-MM-dd HH:mm:ss} _ %m%n</pattern>      
      	</encoder>
   </appender>
   <appender name="myFileAppenderMatchingCreateDay" class="ch.qos.logback.core.FileAppender">
   		<file>${LOG_PATH_MATCHING_CREATE}/matchingCreateDay.log</file>
      	<!--property에서 변수화 시킨 경로를 사용 -->
   		<append>true</append> <!-- 기존 파일을 덮어씀 -->
      	<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
         	<pattern>%d{yyyy-MM-dd HH:mm:ss} _ %m%n</pattern>      
      	</encoder>
   </appender>
   
   
   
   
   
   
   
	
	
	

	<!-- 로그 등록 -->
	<!-- 간병백과 페이지 방문자를 기록하는 로그 -->
	<logger name="com.kh.dndncare.board.controller.BoardController" level="info" additivity="false">
		<appender-ref ref="careInformationFileAppender"/>
	</logger>
	
	<!-- 간병백과 페이지에서 ai검색 요청을 기록하는 로그 -->
	<logger name="com.kh.dndncare.common.interceptor.CheckCareInformationAiSearch" level="info" additivity="false">
		<appender-ref ref="careInformationAiFileAppender"/>
	</logger>
	
	<!-- 간병백과 페이지 방문자를 기록하는 로그 -->
	<logger name="com.kh.dndncare.common.interceptor.CheckCareInformationUsage" level="info" additivity="false">
		<appender-ref ref="careInformationUsageFileAppender"/>
	</logger>
	
	
	<!-- 매칭컨트롤러 -->
   <logger name="com.kh.dndncare.matching.controller.MatchingController" lever="info" additivity="false">
   		<appender-ref ref="myFileAppenderMatching"/>
   </logger>
   <logger name="com.kh.dndncare.common.interceptor.CheckMatCreate" lever="info" additivity="false">
   		<appender-ref ref="myFileAppenderMatchingCreateDay"/>
   </logger>
	<!-- 로그인한 사용자를 기록하는 로그 -->
	<logger name="com.kh.dndncare.common.interceptor.CheckLoginUser" level="info" additivity="false">
		<appender-ref ref="loginUserFileAppender"/>
	</logger>
	
	
	<!-- 루트로그 등록 : 전역로그이기 때문에 name을 지정하지 않는다. -->
	<root level="info">
		<appender-ref ref="myConsoleAppender"/>
	</root>
</configuration>